#!/bin/bash
set -euo pipefail
echo "  _    _ _   _ _ _ _            _____           _       _         __  __                                   ";
echo " | |  | | | (_| (_| |          / ____|         (_)     | |       |  \/  |                                  ";
echo " | |  | | |_ _| |_| |_ _   _  | (___   ___ _ __ _ _ __ | |_ ___  | \  / | __ _ _ __   __ _  __ _  ___ _ __ ";
echo " | |  | | __| | | | __| | | |  \___ \ / __| '__| | '_ \| __/ __| | |\/| |/ _\` | '_ \ / _\` |/ _\` |/ _ | '__|";
echo " | |__| | |_| | | | |_| |_| |  ____) | (__| |  | | |_) | |_\__ \ | |  | | (_| | | | | (_| | (_| |  __| |   ";
echo "  \____/ \__|_|_|_|\__|\__, | |_____/ \___|_|  |_| .__/ \__|___/ |_|  |_|\__,_|_| |_|\__,_|\__, |\___|_|   ";
echo "                        __/ |                    | |                                        __/ |          ";
echo "                       |___/                     |_|                                       |___/           ";
REPO_URL="https://raw.githubusercontent.com/lagie-marin/utility-scripts-template/main"
DOWNLOAD_PTR_URL="$REPO_URL/download.ptr"
SCRIPTS=($(sudo curl -s -L "$DOWNLOAD_PTR_URL" | head -n 1))
LOCAL_FOLDER="/usr/local/bin"
DEST_FOLDER="/usr/utility-scripts-template"
SETTINGS="$LOCAL_FOLDER/config.ptr"
USE_LIB=false

sudo mkdir -p "$DEST_FOLDER"
sudo chmod +x "$LOCAL_FOLDER"

for script in "${SCRIPTS[@]}"; do
    if [ "$script" == "getlib" ]; then
        echo "If you want to use the getlib command you will have to create a private repo on your github."
        read -rp "Do you want to use 'getlib' (y/n)? " choice
        if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
            while true; do
                echo "How to create your github repo for your lib:"
                echo "-Go to your repo, not epitech"
                echo "-Click on the new button, name your repo add an owner"
                echo "This repo will be used to put your lib and simplify its recovery."
                read -rp "Enter the HTTPS link to the library repository (cancel => skip): " lib_repo
                if [[ "$lib_repo" =~ ^https://.*\.git$ ]]; then
                    sudo wget -q --show-progress -O "$LOCAL_FOLDER/$script" "$REPO_URL/$script"
                    sudo chmod +x "$LOCAL_FOLDER/$script"
                    sudo chown $USER "$LOCAL_FOLDER/$script"
                    sudo sed -i "6i git clone $lib_repo" "$LOCAL_FOLDER/$script"
                    USE_LIB=true
                    break
                elif [ "$lib_repo" = "cancel" ]; then
                    echo "Cancel 'getlib' installation"
                    break
                else
                    echo "Invalid URL. It should start with 'https://' and end with '.git'. Please try again."
                fi
            done
        else
            echo "Skipping 'getlib'."
        fi
    else
        sudo wget -q --show-progress -O "$LOCAL_FOLDER/$script" "$REPO_URL/$script"
        sudo chown $USER "$LOCAL_FOLDER/$script"
        sudo chmod +x "$LOCAL_FOLDER/$script"
    fi
done
echo "Generate config"
if [ ! -f "$SETTINGS" ]; then
    sudo touch $SETTINGS
    sudo chown $USER "$SETTINGS"
    sudo chmod +x "$SETTINGS"
fi
sudo echo "CODING_STYLE=\"./coding-style-reports.log\"" > $SETTINGS
sudo echo "LIB=$USE_LIB" >> $SETTINGS
sudo echo "COLOR_CODE=\'\o033[38;5;214m\'" >> $SETTINGS
sudo echo "COLOR_COM_I=\'\e[32m\'" >> $SETTINGS
sudo echo "COLOR_COM=\'\o033[32m\'" >> $SETTINGS
sudo echo "EPI_HEADER=\"\$inclusion_s\n\$inclusion_i EPITECH PROJECT, \$year\n\$inclusion_i \$dirname\n\$inclusion_i File description:\n\$inclusion_i \$filename\$extension\n\$inclusion_e\n\"" >> $SETTINGS
sudo echo "The scripts have been successfully downloaded."
